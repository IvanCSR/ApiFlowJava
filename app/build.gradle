/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
    
    // https://mvnrepository.com/artifact/com.microsoft.sqlserver/mssql-jdbc
    implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '12.8.1.jre11'
    // https://mvnrepository.com/artifact/com.formdev/flatlaf
    implementation group: 'com.formdev', name: 'flatlaf', version: '3.5.2'
    implementation group: 'com.formdev', name: 'flatlaf-extras', version: '3.5.2'
      // https://mvnrepository.com/artifact/org.kordamp.ikonli/ikonli-fontawesome-pack
    implementation group: 'org.kordamp.ikonli', name: 'ikonli-fontawesome-pack', version: '12.3.1'
    implementation group: 'org.kordamp.ikonli', name: 'ikonli-swing', version: '12.3.1'

   //Repositorio local de *.jar
    implementation files('src/main/Lib/swing-toast-notifications-1.0.3.jar')

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.example.TallerAPP01.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
